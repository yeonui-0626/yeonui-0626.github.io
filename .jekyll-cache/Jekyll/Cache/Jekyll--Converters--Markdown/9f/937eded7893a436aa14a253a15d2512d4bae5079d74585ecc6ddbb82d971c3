I"&<h2 id="백준-1992번-분할-정복법">백준 1992번 분할 정복법</h2>

<p><a href="https://www.acmicpc.net/problem/1992">문제보기</a></p>

<h3 id="1-문제-풀이">1. 문제 풀이</h3>

<p>이 문제는 분할정복법을 적용하여 풀어야한다.  <br />
분할 정복법은 그대로 해결할 수 없는 문제를 작은 문제로 분할하여 문제를 해결하는 방법이다.  <br />
(<a href="https://ko.wikipedia.org/wiki/%EB%B6%84%ED%95%A0_%EC%A0%95%EB%B3%B5_%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98">위키백과</a>가 그렇다고 합니다.)  <br />
그래서 나는 이 개념을 곧이곧대로 받아들여서 큰 개념을 작은 개념으로 나누고 <br />
작은 문제를 해결해서 큰 문제로 확장해가는 건 줄 알았다.  <br />
그래서 처음 생각한 로직은 다음과 같다.</p>

<p>재귀를 이용해 NXN -&gt; N/2 X N/2 -&gt; … 2X2 까지 간후, 압축할 수 있는 최소 배열인 2X2의 배열의 확인하고,  <br />
이 배열의 결과를 도출한 뒤, 나머지 2X2 배열에 대해서 동일하게 계산을 해준다. 총 4개의 2X2 결과가 도출되면   <br />
이를 이용해서 4X4 배열의 결과를 도출하고 반복해서 … NxN 의 배열의 결과를 알아내는 방식으로 구현.  <br />
그래서 이렇게 구현했다……  <br />
근데 …… 이 문제에서 분할 정복법의 뽀인트는 <code class="language-plaintext highlighter-rouge">"큰 문제를 해결할 수 없다면"</code> 이다. <br />
큰 문제를 해결할 수 있으면 하면 되는거다. 하하.</p>

<p>NXN -&gt; N/2 X N/2 -&gt; … 2X2  이렇게 재귀로 작은 배열로 들어가는 과정해서 <br />
해당 배열이 압축될 수 있는지 먼저 확인하고 압축이 된다면 압축한다.<br />
이 단순명료한 과정을 생각하지 못해서 한참 걸렸다!</p>

<p>분할정복법에 대해 다시 알아 볼 수 있었던 좋은 문제 였다!</p>

<h3 id="2-코드">2. 코드</h3>
<script src="https://gist.github.com/yeonui-0626/89f1bc4ee9f5f30213f4a79eca5557cc.js"></script>

:ET