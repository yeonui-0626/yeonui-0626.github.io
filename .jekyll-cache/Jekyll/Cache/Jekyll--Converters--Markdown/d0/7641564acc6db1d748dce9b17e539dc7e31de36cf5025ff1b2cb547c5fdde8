I"4<h1 id="백준-16197-번-두-동전">백준 16197 번 두 동전</h1>

<p><a href="https://www.acmicpc.net/problem/16197">문제보기</a></p>

<h2 id="1-문제-풀이">1. 문제 풀이</h2>

<ul>
  <li>DFS와 백트레킹으로 풀었다. (BFS로도 풀 수 있음!)</li>
  <li>두 동전을 동시에 이동하면서 시뮬레이션을 돌렸는데 생각해야할 디테일이 있는 문제였다.</li>
</ul>

<ol>
  <li>이동할 방향을 선택.</li>
  <li>이동했을 때, 떨어지는지 확인.</li>
  <li>
    <p>몇 개의 동전이 떨어졌는지 확인.<br />
3-1. 하나만 떨어짐</p>

    <ul>
      <li>ans를 최소값으로 업데이트 =&gt; continue(다른 방향 탐색)</li>
    </ul>

    <p>3-2. 둘 다 떨어짐</p>

    <ul>
      <li>더 이상 탐색하지 않음 =&gt; continue(다른 방향 탐색)</li>
    </ul>
  </li>
  <li>(둘 다 떨어지지 않았다면) 이동 했을 때 벽인지 확인
    <ul>
      <li>벽이라면 이동하지 않고 원래 위치로</li>
    </ul>
  </li>
  <li>이동 후, 또 탐색 (1번부터 다시 반복)</li>
</ol>

<h2 id="2시행착오">2.시행착오</h2>

<p>골4 백트래킹 문제는 완전탐색 기초 + 디테일인 것 같다.(근데 항상 디테일을 놓친다 ㅜ )</p>

<ul>
  <li>이 문제에서는 이동횟수가 10번 보다 많으면 -1을 출력하는 거라서
ans에 10을 저장하고 ans 가 10 그대로이면 -1을 출력하는 것으로 짰다.
이렇게 하면 10회 이동해서 동전을 떨어뜨린 경우도 -1이 출력된다…… 이 부분을 놓쳐서 계속 해맨것이 아쉽다.</li>
  <li>백트래킹 문제에서는 가지치기가 중요한데, 초반에 코드를 잤을 때 계속 스택 오버플로우가 났다.(계속 왔다갔다 하면서 반복 탐색했음)
    <ul>
      <li>문제에서 이동횟수를 10회 제한했지 때문에 cnt가 10번이 초과되면 탐색하지 않도록 해야한다.</li>
    </ul>
  </li>
</ul>

<h2 id="3-코드">3. 코드</h2>

<script src="https://gist.github.com/yeonui-0626/30fda8c16330e9a24a76ee6f3ee5f7d3.js"></script>

:ET