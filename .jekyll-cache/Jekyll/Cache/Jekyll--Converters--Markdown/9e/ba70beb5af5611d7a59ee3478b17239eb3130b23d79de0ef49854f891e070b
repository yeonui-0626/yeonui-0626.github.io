I"G<h2 id="kubernetes-맛보기">Kubernetes 맛보기</h2>

<blockquote>
  <p>카카오 기술 블로그에 쿠버네티스에 대한 포스팅 <a href="https://tech.kakao.com/2018/12/24/kubernetes-deploy/">kubernetes를 이용한 서비스 무중단 배포</a> 를 단순 쿠버네티스에 대한 궁금증만으로 읽어보았다.<br />
내용은 어려웠지만 그래도 이해해볼려고 용어를 찾아보는 과정에서 쿠버네티스를 조금 알게 되었다.<br />
아직 포스팅의 모든 내용을 이해할 수는 없었지만 읽는 과정에서 쿠버네티스에 대해 알게된 점을 정리해보았다.</p>
</blockquote>

<h2 id="쿠버네티스란-">쿠버네티스란 ?</h2>

<ul>
  <li>컨테이너 <strong>오케스트레이션</strong> 오픈소스 시스템.<br />
 <code class="language-plaintext highlighter-rouge">오케스트레이션</code> 이란?
    <ul>
      <li>컴퓨터 시스템과 애플리케이션, 서비스의 자동화된 설정, 관리, 조정을 의미한다.</li>
      <li>복잡한 태스크와 워크플로우를 보다 쉽게 관리할 수 있도록 돕는다.</li>
      <li>자동화와 비슷하지만 다르다. 일반적으로 <code class="language-plaintext highlighter-rouge">자동화</code>란 단일 태스크의 자동화를 의미한다.</li>
      <li>반면 오케스트레이션은 여러 이기종 시스템 전반에서 걸친 프로세스 또는 워크플로우를 자동화하는 방식이다.</li>
      <li>우선 프로세스를 자동화하고 나면 이를 자동으로 실행되도록 오케스트레이션할 수 있다.</li>
    </ul>
  </li>
</ul>

<h2 id="쿠버네티스-왜-사용할까-">쿠버네티스 왜 사용할까 ?</h2>

<ul>
  <li>분산 시스템을 탄력적으로 실행하기 위해 ?</li>
  <li>쿠버네티스는 <code class="language-plaintext highlighter-rouge">서비스 디스커버리</code>와 <code class="language-plaintext highlighter-rouge">로드밸런싱</code>, <code class="language-plaintext highlighter-rouge">스토리지 오케스트레이션</code>, <code class="language-plaintext highlighter-rouge">자동 복구</code> 등 시스템을 관리하기 위한 기능들을 제공한다.</li>
  <li>컨테이너에서 시스템을 돌리고 있다고 가정하자. 만약 컨테이너가 다운되면 다른 컨테이너를 다시 시작해야한다. 이때 쿠버네티스를 사용하여 시스템 운영을 자동화하면 이런한 상황을 대처할 수 있다.</li>
</ul>

<h2 id="알게된-점">알게된 점</h2>

<ol>
  <li>쿠버네티스를 사용하게 되면 여러개의 노드(컨테이너)를 하나의 클러스터로 묶어서 사용하게 된다.</li>
  <li>용어<br />
<code class="language-plaintext highlighter-rouge">Pod(파드)</code></li>
</ol>

<ul>
  <li>쿠버네티스에서 생성하고 관리할 수 있는 배포 가능한 가장 작은 컴퓨팅 단위</li>
  <li>하나 이상의 컨테이너 그룹</li>
  <li>
    <p>이 그룹은 스토리지 및 네트워크를 공유하고 해당 컨테이너를 구동 하는 방식에 대한 명세를 갖는다. 파드의 콘텐츠는 항상 함께 배치되고 함께 스케줄되며 공유 콘텍스트에서 실행된다.
<br />
<code class="language-plaintext highlighter-rouge">service</code></p>

    <ul>
      <li>Pod의 논리적 집합. 어떻게 접근할지에 대한 정잭을 정의해놓은 것.</li>
      <li>Label Selector 를 이용하여 관리하고자하는 Pod들을 정의할 수 있다.</li>
      <li>각 Pod의 IP로는 외부에서 접근이 불가능하지만 서비스는 이를 가능하게 해준다.</li>
    </ul>

    <p><code class="language-plaintext highlighter-rouge">ingress</code></p>

    <ul>
      <li><code class="language-plaintext highlighter-rouge">ingress</code> : 외부로부터 서버 내부로 유입되는 네트워크 트래픽</li>
      <li>쿠버네티스의 ingress는 외부에서 쿠버네티스 클러스터 내부로 들어오는 네트워크 요청. 즉, ingress 트래픽을 어떻게 처리할지 정의한다.</li>
      <li>ingress 는 외부에서 쿠버네티스에서 실행 중인 Deployment 와 Service에 접근하기 위한, 일종의 관문(Gateway)같은 역할을 담당한다.</li>
      <li>ingress는 Layer 7에서의 요청을 처리할 수 있다. 외부로부터 들어오는 요청에 대한 로드밸런싱, TLS/SSL 인증서 처리, 특정 HTTP 경로의 라우팅 등의 자세하게 정의할 수 있다.</li>
    </ul>
  </li>
</ul>

<ol>
  <li>kubernetes pod, service, ingress 관계
    <ul>
      <li>kubernetes는 별도의 클러스터 네트워크를 구성해서 이뤄지는 경우가 많기 때문에 외부에서 클러스터 내부에서 실행중인 pod에 접근하기 위해서는 인입되는 트래픽을 클러스터 내부까지 전달해줄 LB(Load Balancing) 역할을 해줄 매개체가 필요하다.</li>
    </ul>
  </li>
</ol>

<ul>
  <li>kubernetes 내부에서 pod 간 통신을 위해서는 중간에 service를 두고 통신하게되는데, ingress 를 설정할 때 개별 pod를 이용하는게 아니라 pod 와 연결된 service를 설정하도록 되어있다.</li>
  <li><em>pod는 하나 이상의 컨테이너 그룹, service는 pod 어떻게 에 접근할지 정의해 놓은 것. ingress는 service에 접근하기 위한 처리를 담당</em></li>
</ul>

<ol>
  <li>무중단 배포를 위한 방법</li>
</ol>

<ul>
  <li>클러스터를 구성하는 노드들 중 일부에 장애가 발생하더라도 장애가 난 곳에 컨테이너가 쿠버네티스에 의해 다른 정상 상태의 노드로 옮겨가게 되어서 컨테이너로 제공하던 서비스에 지장 없이 서비가 지속될 수 있게 해준다.</li>
</ul>

<ol>
  <li>kubernetes 배포시 주의할 점</li>
</ol>

<ul>
  <li>컨테이너가 종료될 때 기존에 처리중이던 요청에 대한 처리를 완료하고 새로운 요청을 받지 않도록 개발되어야한다.</li>
  <li>그렇지 않으면 트래픽이 pod 쪽으로 가고 있는데 pod가 종료되서 error가 발생한다.</li>
</ul>

<p><br />
<br /></p>
<hr />

<p><br />
<br /></p>

<blockquote>
  <p>참고</p>

  <p><a href="https://tech.kakao.com/2018/12/24/kubernetes-deploy/">kubernetes를 이용한 서비스 무중단 배포</a><br />
<a href="https://bcho.tistory.com/1262">쿠버네티스 #7 - 서비스 (Service)</a><br />
<a href="https://www.redhat.com/ko/topics/automation/what-is-orchestration">오케스트레이션이란?</a><br />
<a href="https://yoonchang.tistory.com/49">[Kubernetes] 6. 쿠버네티스 Service란? (NodePort, nginx 실습)</a><br />
<a href="https://blog.naver.com/alice_k106/221502890249">[Kubernetes] 1편 : 쿠버네티스 Ingress 개념 및 사용 방법, 온-프레미스 환경에서 Ingress 구축하기</a><br />
<a href="https://smoh.tistory.com/348">[Kubernetes] 쿠버네티스가 왜 필요하고 무엇을 할 수 있나?</a></p>
</blockquote>
:ET